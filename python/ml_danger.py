import pickle
import tempfile
import numpy as np
import random
import sys
from sklearn import tree
from sklearn.metrics import accuracy_score
# import pandas as pd
from geopy.distance import great_circle


Neighborhood = {'GRANDMONT': '42.3966712, -83.2104426', 'PAUL ROBESON': '42.331427, -83.0457538', 'EVERGREEN 7/8MILE': '42.3868733, -83.2368586', 'MAIN CAMPUS': '42.333684, -83.2487319', 'WARRENDALE': '42.3460381, -83.2238314', 'PECK': '42.3850502, -82.9674748', 'CONNER CREEK IND': '42.3772041, -82.9689738', 'PEMBROKE': '42.4350202, -83.3093972', 'WOODMERE': '42.3075344, -83.1357729', 'ATKINSON-EUCLID': '42.331427, -83.0457538', 'FOX CREEK': '42.4158831, -83.3085758', 'MICHIGAN AVENUE': '42.3311632, -83.1014586', 'UNIVERSITY DISTRICT': '42.4253115, -83.1367549', 'CONNER': '42.3913687, -82.9806188', 'WEST SIDE INDUSTRIAL': '42.3253018, -83.0616419', 'MT. OLIVET CEMETERY': '42.4199806, -83.023382', 'GRANDMONT-ROSEDALE': '42.3966712, -83.2104426', 'LASALLE GARDENS': '42.3641546, -83.0965265', 'CITY AIRPORT': '42.2262824, -83.3470569', 'WEATHERBY': '42.3750764, -83.2385559', 'PALMER WOODS': '42.4342905, -83.1233482', 'WEST OUTER DRIVE': '42.2649398, -83.1707351', 'CERVENY': '42.331427, -83.0457538', 'DELRAY': '42.2974964, -83.1085976', 'MARTIN PARK': '42.4127581, -83.1313926', 'RIVERDALE': '42.4096224, -83.2639812', 'HENRY FORD': '42.3053156, -83.2246496', 'COOLEY': '42.4291333, -83.2596192', 'GREEKTOWN': '42.3357596, -83.042179', 'PALMER PARK': '42.4254231, -83.1190006', 'OAKMAN': '42.378582, -83.1442864', 'GREEN ACRES': '42.4424313, -83.1367549', 'FIVE POINTS': '42.4338875, -83.2813717', 'NEW CENTER': '42.3728152, -83.0777448', 'JLA / COBO': '42.331427, -83.0457538', 'LOVING': '42.5256594, -82.893223', 'SOUTHEASTERN': '42.6330874, -83.4661694', 'OUTER DRIVE VAN DYKE': '42.441683, -83.024401', 'HIGHLAND PARK': '42.4152702, -83.0811782', 'WESTWOOD PARK': '42.3918987, -83.233202', 'EVERGREEN 6/7 MILE': '42.3868733, -83.2368586', 'BAGLEY': '42.4274173, -83.1514991', 'THURGOOD MARSHALL': '42.331427, -83.0457538', 'JEFFERSON CHALMERS': '42.365758, -82.9420892', 'CORE CITY': '42.3455428, -83.0925023', 'PIQUETTE': '42.368561, -83.0648907', 'BRUSH PARK': '42.3465376, -83.0482198', 'HAMTRAMCK': '42.3785024, -83.0538075', 'ISLANDVIEW': '42.3550245, -83.006594', 'PERSHING': '42.3065419, -83.1224295', 'THE EYE': '42.4154596, -83.2800342', 'JOSEPH BARRY': '42.3773047, -82.9955289', 'ROUGE PARK': '42.3696665, -83.2577582', 'TIREMAN': '42.3492876, -83.2581031', 'BALDUCK PARK': '42.4141317, -82.9170912', 'BURBANK': '42.3051655, -83.2242902', 'ENGLISH VILLAGE': '42.4053914, -82.9299876', 'LASALLE COLLEGE PARK': '42.417189, -83.0025643', 'PARKSIDE HOMES': '42.331427, -83.0457538', 'FISHER': '42.3330289, -83.078824', 'CARBON WORKS': '42.2892979, -83.1354144', 'CLEMENTE': '42.331427, -83.0457538', 'ROGELL': '42.2271794, -83.3464022', 'BOSTON-EDISON': '42.3809937, -83.0989936', 'PATTON': '42.3933447, -83.243453', 'MGM': '42.331427, -83.0457538', 'OLD REDFORD': '42.4205551, -83.2626433', 'STAHELIN-ASHTON': '42.331427, -83.0457538', 'JOY-SOUTHFIELD': '42.357882, -83.218073', 'DETROIT GOLF': '42.4212402, -83.1300519', 'RUSSELL WOODS': '42.3859987, -83.1340738', 'CHANDLER PARK': '42.3979236, -82.9676299', 'BRIGHTMOOR': '42.3962815, -83.2452478', 'ELIZA HOWELL': '42.3900409, -83.2639812', 'CLAYTOWN': '42.3264, -83.1246404', 'NW GOLDBERG': '42.3553405, -83.0925023', 'DOWNTOWN': '42.3331454, -83.0495622', 'NEWBERRY': '42.317794, -83.1043513',
                'CHENE': '42.3558403, -83.0342437', 'TRUMBULL/WOODBRIDGE': '42.3491979, -83.0770533', 'STATE FAIR-GRATIOT': '42.442382, -82.973076', 'STEWART': '42.2372629, -83.1795493', 'POLETOWN EAST': '42.3674354, -83.0495622', 'GREENSBRIAR': '42.4460401, -82.9945041', 'SPRINGDALE': '42.6900602, -82.9345031', 'DENBY': '42.420647, -83.31002', 'FITZGERALD': '42.4101319, -83.1488186', 'RIVERTOWN': '42.3373919, -83.0186816', 'GLYNN-WEBB': '42.331427, -83.0457538', 'BARTON MCFARLANE': '42.3644223, -83.1622201', 'MOHICAN REGENT': '42.446357, -82.9797246', 'FISKHORN': '42.331427, -83.0457538', 'FRANKLIN PARK': '42.3662679, -83.2345405', 'EAST ENGLISH VILLAGE': '42.4053914, -82.9299876', 'SOUTHWEST DETROIT / MEXICANTOWN': '42.3187515, -83.0951852', 'BRICKTOWN': '42.3331464, -83.039494', 'GRAND-HOLBROOK': '42.331427, -83.0457538', 'BOYNTON': '42.270958, -83.1568598', 'PULASKI': '42.437894, -83.001221', 'SHERWOOD FOREST': '42.4350949, -83.1367549', 'EASTERN MARKET': '42.3484978, -83.0401653', 'WINTER HALTER': '42.331427, -83.0457538', 'PHOENIX': '42.3914664, -83.2830437', 'ARDEN PARK/EAST BOSTON': '42.3894234, -83.0796148', 'SCHOOLCRAFT': '42.3878951, -83.1830663', 'PETOSKEY-OTSEGO': '42.3719705, -83.124689', 'STATE FAIR-NOLAN': '42.331427, -83.0457538', 'WEST CANFIELD': '42.3494951, -83.0718597', 'ST. JEAN': '42.3762259, -82.9766306', 'VANGUARD': '42.6473737, -83.3237693', 'MILLENIUM VILLAGE': '42.3370772, -83.0496079', 'KRANZ WOODS': '42.4300795, -83.053589', 'RUSSELL INDUSTRIAL': '42.331427, -83.0457538', 'BRIGGS': '42.338365, -83.0750613', 'MORNINGSIDE': '42.397741, -82.9447782', 'ROSEDALE PARK': '42.3976226, -83.2265089', 'VON STUEBEN': '42.4281128, -83.001221', 'MEDICAL CENTER': '42.3543741, -83.0562734', 'NECKLACE DISTRICT': '42.331427, -83.0457538', 'CASTLE ROUGE': '42.3817077, -83.2679948', 'MARINA DISTRICT': '42.3613737, -82.9703178', 'JAMIESON': '42.3690388, -82.9889524', 'CROSMAN': '42.2263426, -83.3962401', 'INDIAN VILLAGE': '42.3611429, -82.9965192', 'LAFAYETTE PARK': '42.3408228, -83.034795', 'MINOCK PARK': '42.4018477, -83.235879', 'HUBBARD-RICHARD': '42.3203928, -83.0817699', 'BELLE ISLE': '42.3432541, -82.9743495', 'WEST VILLAGE': '42.3556743, -82.9971909', 'EAST WARREN': '42.3852121, -82.9894473', 'NORTH ROSEDALE PARK': '42.4074123, -83.2265089', 'RAVENDALE': '42.401195, -82.9810684', 'MCDOUGALL-HUNT': '42.3573139, -83.0240532', 'GREENFIELD': '42.3668585, -83.1973263', 'FOREST PARK': '42.3573145, -83.0441927', 'HENRY FORD / VIRGINIA PARK': '42.3749304, -83.0925023', 'REGENT PARK': '42.4461758, -82.9568771', 'CONANT GARDENS': '42.430893, -83.06701', 'FOXTOWN': '42.3377179, -83.0542601', 'TELEGRAPH': '42.4108543, -83.2772347', 'ELMWOOD PARK': '42.346211, -83.0227103', 'JOY-TIREMAN': '42.3492876, -83.2581031', 'GOLD COAST': '42.3533032, -82.9884584', 'HARMONY VILLAGE': '42.215395, -83.480558', 'MASONIC TEMPLE / CASS PARK': '42.331427, -83.0457538', 'WOODLAWN CEMETERY': '42.440478, -83.121217', 'WACO': '42.6351964, -83.0860628', 'OAKWOOD HEIGHTS': '42.2902606, -83.1514991', 'CULTURAL CENTER': '42.3766434, -83.4665098', 'GEMEINER': '42.4302182, -83.1625551', 'MACKENZIE': '42.3541592, -83.0660018', 'CORKTOWN': '42.3305276, -83.06701', 'GRANDALE': '42.3669735, -83.2050863', 'FOCUS HOPE': '42.331427, -83.0457538', 'BERG-LASHER': '42.331427, -83.0457538'}

incl = ['SPRINGDALE', 'MACKENZIE', 'GEMEINER', 'PEMBROKE', 'VON STUEBEN', 'WEST OUTER DRIVE', 'WACO', 'PERSHING', 'FOX CREEK', 'EAST WARREN', 'FRANKLIN PARK', 'EVERGREEN 6/7 MILE', 'MORNINGSIDE', 'GREENFIELD', 'CITY AIRPORT', 'POLETOWN EAST', 'BOYNTON', 'STATE FAIR-GRATIOT', 'CLAYTOWN', 'CONNER', 'HARMONY VILLAGE', 'WARRENDALE', 'BURBANK', 'NW GOLDBERG', 'ROSEDALE PARK', 'DENBY', 'TIREMAN', 'STATE FAIR-NOLAN', 'BARTON MCFARLANE', 'EVERGREEN 7/8MILE', 'DOWNTOWN', 'PIQUETTE', 'RIVERDALE', 'WEATHERBY', 'FOCUS HOPE', 'ELMWOOD PARK', 'THE EYE', 'GOLD COAST', 'RIVERTOWN', 'MOHICAN REGENT', 'SCHOOLCRAFT', 'PETOSKEY-OTSEGO', 'CERVENY', 'GREEKTOWN', 'REGENT PARK', 'RAVENDALE', 'STEWART', 'CHENE', 'ROUGE PARK', 'BALDUCK PARK', 'PULASKI', 'FISKHORN', 'GRANDALE', 'NEW CENTER', 'ELIZA HOWELL', 'CARBON WORKS', 'ISLANDVIEW', 'OAKWOOD HEIGHTS', 'RUSSELL WOODS', 'MEDICAL CENTER', 'DELRAY', 'BERG-LASHER', 'HENRY FORD / VIRGINIA PARK', 'WEST CANFIELD', 'TRUMBULL/WOODBRIDGE', 'MASONIC TEMPLE / CASS PARK', 'BAGLEY', 'GRANDMONT-ROSEDALE', 'FIVE POINTS', 'BRICKTOWN', 'BRIGGS', 'CHANDLER PARK', 'PALMER WOODS', 'LASALLE GARDENS', 'CULTURAL CENTER', 'BRUSH PARK', 'COOLEY', 'EAST ENGLISH VILLAGE', 'PALMER PARK', 'WINTER HALTER',
        'TELEGRAPH', 'CASTLE ROUGE', 'NEWBERRY', 'BOSTON-EDISON', 'KRANZ WOODS', 'HENRY FORD', 'PHOENIX', 'NORTH ROSEDALE PARK', 'CONNER CREEK IND', 'JOY-TIREMAN', 'OUTER DRIVE VAN DYKE', 'CORKTOWN', 'MCDOUGALL-HUNT', 'EASTERN MARKET', 'WOODMERE', 'LASALLE COLLEGE PARK', 'PATTON', 'WEST VILLAGE', 'LAFAYETTE PARK', 'ROGELL', 'SOUTHWEST DETROIT / MEXICANTOWN', 'MAIN CAMPUS', 'MARTIN PARK', 'SOUTHEASTERN', 'HUBBARD-RICHARD', 'FITZGERALD', 'GREENSBRIAR', 'MGM', 'JLA / COBO', 'PECK', 'PAUL ROBESON', 'OAKMAN', 'VANGUARD', 'THURGOOD MARSHALL', 'JEFFERSON CHALMERS', 'FOXTOWN', 'JOSEPH BARRY', 'ENGLISH VILLAGE', 'NECKLACE DISTRICT', 'FOREST PARK', 'MICHIGAN AVENUE', 'GLYNN-WEBB', 'GRAND-HOLBROOK', 'RUSSELL INDUSTRIAL', 'SHERWOOD FOREST', 'CORE CITY', 'GRANDMONT', 'ARDEN PARK/EAST BOSTON', 'MILLENIUM VILLAGE', 'JOY-SOUTHFIELD', 'ATKINSON-EUCLID', 'CLEMENTE', 'LOVING', 'JAMIESON', 'GREEN ACRES', 'MINOCK PARK', 'CROSMAN', 'UNIVERSITY DISTRICT', 'DETROIT GOLF', 'OLD REDFORD', 'MARINA DISTRICT', 'STAHELIN-ASHTON', 'BRIGHTMOOR', 'WESTWOOD PARK', 'PARKSIDE HOMES', 'HAMTRAMCK', 'CONANT GARDENS', 'HIGHLAND PARK', 'WEST SIDE INDUSTRIAL', 'INDIAN VILLAGE', 'ST. JEAN', 'MT. OLIVET CEMETERY', 'FISHER', 'BELLE ISLE', 'WOODLAWN CEMETERY']


def getClosestN(latitude, longitude):
    max_neighborhood = None
    min_distance = float("inf")
    stop_long_lat = [latitude, longitude]
    for index, (neighborhood, long_lats) in enumerate(Neighborhood.iteritems()):
        long_lats = tuple(long_lats.split(','))
        distance = great_circle(stop_long_lat, long_lats).meters
        if neighborhood in incl and min_distance > distance:
            min_distance = distance
            max_neighborhood = neighborhood
    return incl.index(max_neighborhood)


def train():
    # Load Data
    filename = 'ml_danger.csv'
    data = np.loadtxt(filename, delimiter=',')
    X = data[:, 0:2]
    y = np.array([data[:, 2]]).T
    n, d = X.shape
    performs_normal = []
    performs_stump = []
    performs_3level = []

    # shuffle the data
    idx = np.arange(n)
    np.random.seed(13)
    np.random.shuffle(idx)
    X = X[idx]
    y = y[idx]

    # train the decision tree
    clf = tree.DecisionTreeClassifier()
    clf = clf.fit(X, y)
    return clf


def predict(model, x):
    return model.predict(x)


clf = None
try:
    with open('clf.pickle', 'rb') as f:  # Python 3: open(..., 'rb')
        clf = pickle.load(f)[0]
except:
    pass

if not clf:
    clf = train()
    with open('clf.pickle', 'wb') as f:
        pickle.dump([clf], f)

if len(sys.argv) >= 4:
    x = sys.argv[1:]

    lat = float(x[0])
    lng = float(x[1])
    hour = int(x[2])

    xex = [[getClosestN(lat, lng), hour]]

    f = open('danger.dat', 'w')
    p = predict(clf, xex)
    f.write(str(p[0]))
    f.close()
